{"ast":null,"code":"var _jsxFileName = \"C:\\\\JobappNext\\\\my-project\\\\frontend\\\\pages\\\\applicants\\\\[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport ReactMarkdown from \"react-markdown\";\nimport Moment from \"react-moment\";\nimport { fetchAPI } from \"../../lib/api\";\nimport Layout from \"../../components/layout\";\nimport Image from \"../../components/image\";\nimport Seo from \"../../components/seo\";\nimport { getStrapiMedia } from \"../../lib/media\";\n\nconst Applicant = ({\n  applicants\n}) => {\n  const {\n    address,\n    age,\n    name,\n    email,\n    stage,\n    image\n  } = applicants; //   const seo = {\n  //     metaTitle: applicants.title,\n  //     metaDescription: applicants.description,\n  //     shareImage: applicants.image,\n  //     applicants: true,\n  //   };\n\n  console.log(applicants);\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"uk-container uk-margin-medium-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \" uk-flex uk-flex-start uk-flex-between uk-flex-top uk-flex-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    id: \"category\",\n    className: \"uk-text-uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, name), __jsx(Image, {\n    image: image,\n    style: {\n      position: \"static\",\n      borderRadius: \"50%\",\n      height: 120,\n      width: 120,\n      objectFit: \"cover\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  })), __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Adress:\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, address), __jsx(\"hr\", {\n    className: \"uk-divider-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, address), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, age, \" \\xE5r\"), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, email), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, stage.name))));\n};\n\nexport async function getStaticPaths() {\n  const applicants = await fetchAPI(\"/applicants\");\n  return {\n    paths: applicants.map(applicants => ({\n      params: {\n        slug: applicants.slug\n      }\n    })),\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const applicants = await fetchAPI(`/applicants?slug=${params.slug}`);\n  return {\n    props: {\n      applicants: applicants[0]\n    },\n    revalidate: 1\n  };\n}\nexport default Applicant;","map":{"version":3,"sources":["C:/JobappNext/my-project/frontend/pages/applicants/[slug].js"],"names":["ReactMarkdown","Moment","fetchAPI","Layout","Image","Seo","getStrapiMedia","Applicant","applicants","address","age","name","email","stage","image","console","log","position","borderRadius","height","width","objectFit","getStaticPaths","paths","map","params","slug","fallback","getStaticProps","props","revalidate"],"mappings":"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","sourcesContent":["import ReactMarkdown from \"react-markdown\";\r\nimport Moment from \"react-moment\";\r\nimport { fetchAPI } from \"../../lib/api\";\r\nimport Layout from \"../../components/layout\";\r\nimport Image from \"../../components/image\";\r\nimport Seo from \"../../components/seo\";\r\nimport { getStrapiMedia } from \"../../lib/media\";\r\n\r\nconst Applicant = ({ applicants }) => {\r\n  const { address, age, name, email, stage, image } = applicants;\r\n  //   const seo = {\r\n  //     metaTitle: applicants.title,\r\n  //     metaDescription: applicants.description,\r\n  //     shareImage: applicants.image,\r\n  //     applicants: true,\r\n  //   };\r\n  console.log(applicants);\r\n  return (\r\n    <Layout>\r\n      {/* Utökad info om varje applicant */}\r\n\r\n      <div className=\"uk-container uk-margin-medium-top\">\r\n        <div className=\" uk-flex uk-flex-start uk-flex-between uk-flex-top uk-flex-wrap\">\r\n          <h1 id=\"category\" className=\"uk-text-uppercase\">\r\n            {name}\r\n          </h1>\r\n          <Image\r\n            image={image}\r\n            style={{\r\n              position: \"static\",\r\n              borderRadius: \"50%\",\r\n              height: 120,\r\n              width: 120,\r\n              objectFit: \"cover\",\r\n            }}\r\n          />\r\n        </div>\r\n        <h4>Adress:</h4>\r\n        <p>{address}</p>\r\n        <hr className=\"uk-divider-small\" />\r\n        <ul>\r\n          <li>{address}</li>\r\n          <li>{age} år</li>\r\n          <li>{email}</li>\r\n          <li>{stage.name}</li>\r\n        </ul>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const applicants = await fetchAPI(\"/applicants\");\r\n  return {\r\n    paths: applicants.map((applicants) => ({\r\n      params: {\r\n        slug: applicants.slug,\r\n      },\r\n    })),\r\n    fallback: false,\r\n  };\r\n}\r\n\r\nexport async function getStaticProps({ params }) {\r\n  const applicants = await fetchAPI(`/applicants?slug=${params.slug}`);\r\n\r\n  return {\r\n    props: { applicants: applicants[0] },\r\n    revalidate: 1,\r\n  };\r\n}\r\n\r\nexport default Applicant;\r\n"]},"metadata":{},"sourceType":"module"}